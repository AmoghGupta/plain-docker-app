https://www.freecodecamp.org/news/a-beginners-guide-to-docker-how-to-create-your-first-docker-application-cc03de9b639f/

----------------------------------------------------------------------------
docker=>> is a way to containerize your apps so that they can be run any where anytime without 
any issues.

(all the techstack)=====>(docker image is created)====>(docker containers are created from
this image)======>(now docker container can again be updated/modified and a new image 
can be generated)====>(from this new image again a new container can be generated )

Image=we create an image (for our stack), this image is nothing but a blueprint.
Container=> now if someone wants to the run the app, from the image he will generate
a container.

very similar to:
var Container = new Image();
Image is the blueprint
Container is an object made from Image.


create an account on docker:
uname: amoghgupta15
pwd:  is the same which i mostly use.

1. install docker
2. write your application (for example main.py)
3. now we need to write a docker file to tell what exactly are our requirements.
docker file imports the base images of applications which can be found in docker hub.

4. Once your code is ready and the Dockerfile is written, all you have to do is create 
your image to contain your application.
CREATE A IMAGE:
command=>>> docker build -t python-test . 
The ’-t’ option allows you to define the name of your image.

5. RUN THE IMAGE: (meaning a docker container will be created that will run this image)
command=>>> docker run python-test
-----
O/p it will run your application, whatever you created.

6. Docker Commands:
List your images: docker image ls
Delete a specific image: docker image rm [image name]
Delete all existing images: docker image rm $(docker images -a -q)
List all existing containers: docker ps -a
Stop a specific container: docker stop [container name]
Stop all running containers: docker stop $(docker ps -a -q)
Delete a specific container (only if stopped): docker rm [container name]
Delete all containers (only if stopped): docker rm $(docker ps -a -q)
Display logs of a container: docker logs [container name]

